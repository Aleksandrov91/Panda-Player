@model Panda_Player.Models.PandaPlayer.SongViewModel

@{
    ViewBag.Title = "Upload a song";

    if (Request.IsAjaxRequest())
    {
        Layout = null;
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}

@Html.Partial("_Notifications")

@using (Html.BeginForm("Upload", "Songs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <h2>Upload a song</h2>
    <hr />
    <h1>@ViewBag.Error</h1>
    <dl class="dl-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <dt class="col-md-2">
            Artist *
        </dt>
        <dd>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Artist, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Artist, "", new { @class = "text-danger" })
                </div>
            </div>
        </dd>

        <dt class="col-md-2">
            Title *
        </dt>
        <dd>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
        </dd>
        
        <dt class="col-md-2">
            Description 
        </dt>
        <dd>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </dd>
       
        <dt class="col-md-2" >
            Genre *
        </dt>
        <dd>
            <div class="form-group">
                <div class="dropdown col-md-10" id="dropdownId">
                    @Html.DropDownListFor(m => m.Genre,
                        new SelectList(Model.Genre, "Id", "Name"),
                        "----- Please select genre from list! -----",
                        new { @class = "btn btn-info col-md-10" })
                    @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
                </div>
            </div>
        </dd>

        
        <dt class="col-md-2">
            Tags
        </dt>
        <dd>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Tags, new { @class = "form-control" })
                </div>
            </div>
        </dd>
        
        <dt class="col-md-2">
            File *
        </dt>
        <dd>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.File, new { type = "file", name = "File", accept = ".mp3,.wav,.flac,.wv" })
                    @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-4" id="uploadButton">
                    <input type="submit" value="Upload" class="btn btn-default" />
                </div>
            </div>
        </dd>
    </dl>
}

<div>
    @Ajax.ActionLink("Back to My Songs", "MySongs", "Songs", new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "body" })
</div>

<script>
    $('#player').hide();
    wavesurfer.stop();
</script>